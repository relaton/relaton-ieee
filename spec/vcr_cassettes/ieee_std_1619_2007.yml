---
http_interactions:
- request:
    method: get
    uri: https://standards.ieee.org/bin/standards/search?data=%7B%22data%22:%7B%22searchTerm%22:%221619-2007%22%7D%7D
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 14 May 2021 15:56:19 GMT
      Cache-Control:
      - no-cache="set-cookie"
      Content-Type:
      - application/json;charset=utf-8
      Vary:
      - Host,Accept-Encoding,User-Agent
      X-Content-Type-Options:
      - nosniff
      X-Dispatcher:
      - dispatcher2useast1
      X-Frame-Options:
      - SAMEORIGIN
      - SAMEORIGIN
      X-Vhost:
      - standards.ieee.org
      Content-Length:
      - '885'
      Set-Cookie:
      - AWSELB=55B9EFD71A621664217649CC5C38F09A66B8CD41098F3D56379851DC886A0366123E7C88AD28D0BDD8F37BC44BF6E11D27425ADCEBBBACE6A1B563AE88175AB23C96A9E2BA;PATH=/;MAX-AGE=900;
        Secure
      - AWSELBCORS=55B9EFD71A621664217649CC5C38F09A66B8CD41098F3D56379851DC886A0366123E7C88AD28D0BDD8F37BC44BF6E11D27425ADCEBBBACE6A1B563AE88175AB23C96A9E2BA;PATH=/;MAX-AGE=900;SECURE;SAMESITE=None
      - TS01247332=01c1c020dd1b37b193e3635d2a01b56c7977ba7ed0e5cb48fe5fc47af9f0af3e8347143dcc2ff1b4c65b5967f9521e14152391281a;
        Path=/
      Connection:
      - close
      Content-Security-Policy:
      - frame-ancestors http://*.ieee.org https://*.ieee.org
      Strict-Transport-Security:
      - max-age=16070400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJzdGF0dXMiOiJzdWNjZXNzIiwiY29kZSI6MjAwLCJtZXNzYWdlIjoie1wicmVzcG9uc2VcIjp7XCJGYWNldHNcIjpbe1wiZmFjZXRJZFwiOjEsXCJmYWNldE5hbWVcIjpcImNvbnRlbnRUeXBlXCIsXCJtdWx0aXNlbGVjdFwiOnRydWUsXCJmYWNldHNcIjpbe1wiZmFjZXRWYWx1ZU5hbWVcIjpcIlByb2plY3RcIixcImZhY2V0VmFsdWVJZFwiOjQyOTQ5NjcyNTAsXCJzZWxlY3RlZFwiOmZhbHNlfSx7XCJmYWNldFZhbHVlTmFtZVwiOlwiU3RhbmRhcmRcIixcImZhY2V0VmFsdWVJZFwiOjQyOTQ5NjcyNDUsXCJzZWxlY3RlZFwiOmZhbHNlfV0sXCJzb3J0T3JkZXJcIjoxfSx7XCJmYWNldElkXCI6MyxcImZhY2V0TmFtZVwiOlwic3RhbmRhcmRUb3BpY3NcIixcIm11bHRpc2VsZWN0XCI6dHJ1ZSxcImZhY2V0c1wiOlt7XCJmYWNldFZhbHVlTmFtZVwiOlwiQ29tcHV0ZXIgVGVjaG5vbG9neVwiLFwiZmFjZXRWYWx1ZUlkXCI6NDI5NDk2NzI4MSxcInNlbGVjdGVkXCI6ZmFsc2V9LHtcImZhY2V0VmFsdWVOYW1lXCI6XCJDb25zdW1lciBFbGVjdHJvbmljc1wiLFwiZmFjZXRWYWx1ZUlkXCI6NDI5NDk2NzI0MCxcInNlbGVjdGVkXCI6ZmFsc2V9XSxcInNvcnRPcmRlclwiOjl9XSxcInNlYXJjaFJlc3VsdHNcIjp7XCJyZXN1bHRzTWFwTGlzdFwiOlt7XCJyZWNvcmRcIjp7XCJyZWNvcmRUaXRsZVwiOlwiSUVFRSAxNjE5LTIwMDcgLSBJRUVFIFN0YW5kYXJkIGZvciBDcnlwdG9ncmFwaGljIFByb3RlY3Rpb24gb2YgRGF0YSBvbiBCbG9jay1PcmllbnRlZCBTdG9yYWdlIERldmljZXNcIixcInJlY29yZFRleHRcIjpcIklFRUUgPGVuZGVjYV90ZXJtPjE2MTktMjAwNzxcL2VuZGVjYV90ZXJtPiAtIElFRUUgU3RhbmRhcmQgZm9yIENyeXB0b2dyYXBoaWMgUHJvdGVjdGlvbiBvZiBEYXRhIG9uIEJsb2NrLU9yaWVudGVkIFN0b3JhZ2UgRGV2aWNlc1wiLFwicmVjb3JkVVJMXCI6XCJodHRwczovL3N0YW5kYXJkcy5pZWVlLm9yZy9zdGFuZGFyZC8xNjE5LTIwMDcuaHRtbFwifX0se1wicmVjb3JkXCI6e1wicmVjb3JkVGl0bGVcIjpcIklFRUUgMTI0NC4yLTIwMDAgLSBJRUVFIFN0YW5kYXJkIGZvciBNZWRpYSBNYW5hZ2VtZW50IFN5c3RlbSAoTU1TKSBTZXNzaW9uIFNlY3VyaXR5LCBBdXRoZW50aWNhdGlvbiwgSW5pdGlhbGl6YXRpb24gUHJvdG9jb2wgKFNTQUlQKVwiLFwicmVjb3JkVGV4dFwiOlwiLi4uZ3JhbnVsYXJpdHkgb2YgYSBwb3RlbnRpYWwgYXR0YWNrLiBTdXBlcnNlZGVkIDxlbmRlY2FfdGVybT4xNjE5LTIwMDc8XC9lbmRlY2FfdGVybT4gLSBJRUVFIFN0YW5kYXJkIGZvciBDcnlwdG9ncmFwaGljIFByb3RlY3Rpb24gb2YgRGF0YS4uLlwiLFwicmVjb3JkVVJMXCI6XCJodHRwczovL3N0YW5kYXJkcy5pZWVlLm9yZy9zdGFuZGFyZC8xMjQ0XzItMjAwMC5odG1sXCJ9fSx7XCJyZWNvcmRcIjp7XCJyZWNvcmRUaXRsZVwiOlwiSUVFRSAxNjE5LTIwMTggLSBJRUVFIFN0YW5kYXJkIGZvciBDcnlwdG9ncmFwaGljIFByb3RlY3Rpb24gb2YgRGF0YSBvbiBCbG9jay1PcmllbnRlZCBTdG9yYWdlIERldmljZXNcIixcInJlY29yZFRleHRcIjpcIklFRUUgMTYxOS0yMDE4IC0gSUVFRSBTdGFuZGFyZCBmb3IgQ3J5cHRvZ3JhcGhpYyBQcm90ZWN0aW9uIG9mIERhdGEgb24gQmxvY2stT3JpZW50ZWQgU3RvcmFnZSBEZXZpY2VzIElFRUUub3JnICAuLi5cIixcInJlY29yZFVSTFwiOlwiaHR0cHM6Ly9zdGFuZGFyZHMuaWVlZS5vcmcvc3RhbmRhcmQvMTYxOS0yMDE4Lmh0bWxcIn19LHtcInJlY29yZFwiOntcInJlY29yZFRpdGxlXCI6XCJJRUVFIDE2MTkuMS0yMDA3IC0gSUVFRSBTdGFuZGFyZCBmb3IgQXV0aGVudGljYXRlZCBFbmNyeXB0aW9uIHdpdGggTGVuZ3RoIEV4cGFuc2lvbiBmb3IgU3RvcmFnZSBEZXZpY2VzXCIsXCJyZWNvcmRUZXh0XCI6XCJJRUVFIDE2MTkuMS0yMDA3IC0gSUVFRSBTdGFuZGFyZCBmb3IgQXV0aGVudGljYXRlZCBFbmNyeXB0aW9uIHdpdGggTGVuZ3RoIEV4cGFuc2lvbiBmb3IgU3RvcmFnZSBEZXZpY2VzIElFRUUub3JnICAuLi5cIixcInJlY29yZFVSTFwiOlwiaHR0cHM6Ly9zdGFuZGFyZHMuaWVlZS5vcmcvc3RhbmRhcmQvMTYxOV8xLTIwMDcuaHRtbFwifX0se1wicmVjb3JkXCI6e1wicmVjb3JkVGl0bGVcIjpcIklFRUUgMTYxOS4xLTIwMTggLSBJRUVFIFN0YW5kYXJkIGZvciBBdXRoZW50aWNhdGVkIEVuY3J5cHRpb24gd2l0aCBMZW5ndGggRXhwYW5zaW9uIGZvciBTdG9yYWdlIERldmljZXNcIixcInJlY29yZFRleHRcIjpcIklFRUUgMTYxOS4xLTIwMTggLSBJRUVFIFN0YW5kYXJkIGZvciBBdXRoZW50aWNhdGVkIEVuY3J5cHRpb24gd2l0aCBMZW5ndGggRXhwYW5zaW9uIGZvciBTdG9yYWdlIERldmljZXMgSUVFRS5vcmcgIC4uLlwiLFwicmVjb3JkVVJMXCI6XCJodHRwczovL3N0YW5kYXJkcy5pZWVlLm9yZy9zdGFuZGFyZC8xNjE5XzEtMjAxOC5odG1sXCJ9fSx7XCJyZWNvcmRcIjp7XCJyZWNvcmRUaXRsZVwiOlwiSUVFRSBTQSBTaXRlbWFwXCIsXCJyZWNvcmRUZXh0XCI6XCJJRUVFIFNBIFNpdGVtYXAgSUVFRS5vcmcgSUVFRSBYcGxvcmUgRGlnaXRhbCBMaWJyYXJ5IElFRUUgU3RhbmRhcmRzIElFRUUgU3BlY3RydW0gTW9yZSBTaXRlcyBlVG9vbHPCoCAgLi4uXCIsXCJyZWNvcmRVUkxcIjpcImh0dHBzOi8vc3RhbmRhcmRzLmllZWUub3JnL3NpdGVtYXAvaW5kZXguaHRtbFwifX0se1wicmVjb3JkXCI6e1wicmVjb3JkVGl0bGVcIjpcIlAyODgzIC0gU3RhbmRhcmQgZm9yIFNhbml0aXppbmcgU3RvcmFnZVwiLFwicmVjb3JkVGV4dFwiOlwiLi4ub2YgYSBwb3RlbnRpYWwgYXR0YWNrLiBTdXBlcnNlZGVkIElFRUUgPGVuZGVjYV90ZXJtPjE2MTktMjAwNzxcL2VuZGVjYV90ZXJtPiAtIElFRUUgU3RhbmRhcmQgZm9yIENyeXB0b2dyYXBoaWMgUHJvdGVjdGlvbiBvZiBEYXRhLi4uXCIsXCJyZWNvcmRVUkxcIjpcImh0dHBzOi8vc3RhbmRhcmRzLmllZWUub3JnL3Byb2plY3QvMjg4My5odG1sXCJ9fSx7XCJyZWNvcmRcIjp7XCJyZWNvcmRUaXRsZVwiOlwiICAgICBzdGFuZGFyZHMuaWVlZS5vcmcgMSAgVGhpcyBkb2N1bWVudCBcIixcInJlY29yZFRleHRcIjpcIiAgICAgc3RhbmRhcmRzLmllZWUub3JnIDEgIFRoaXMgZG9jdW1lbnQgY29udGFpbnMgc3VwcGxlbWVudGFsIGluZm9ybWF0aW9uIHJlZmVyZW5jZWQgYnkgIC4uLlwiLFwicmVjb3JkVVJMXCI6XCJodHRwczovL3N0YW5kYXJkcy5pZWVlLm9yZy9jb250ZW50L2RhbS9pZWVlLXN0YW5kYXJkcy9zdGFuZGFyZHMvd2ViL2RvY3VtZW50cy9vdGhlci9zbWFydGNpdGllcy5wZGZcIn19LHtcInJlY29yZFwiOntcInJlY29yZFRpdGxlXCI6XCIgICAgIHN0YW5kYXJkcy5pZWVlLm9yZyAxICBUaGlzIGRvY3VtZW50IFwiLFwicmVjb3JkVGV4dFwiOlwiICAgICBzdGFuZGFyZHMuaWVlZS5vcmcgMSAgVGhpcyBkb2N1bWVudCBjb250YWlucyBzdXBwbGVtZW50YWwgaW5mb3JtYXRpb24gcmVmZXJlbmNlZCBieSAgLi4uXCIsXCJyZWNvcmRVUkxcIjpcImh0dHBzOi8vc3RhbmRhcmRzLmllZWUub3JnL2NvbnRlbnQvZGFtL2llZWUtc3RhbmRhcmRzL3N0YW5kYXJkcy93ZWIvZG9jdW1lbnRzL290aGVyL25pcy5wZGZcIn19XSxcInRvdGFsTnVtYmVyT2ZSZXN1bHRzXCI6OSxcInN0YXJ0XCI6MCxcIm9mZnNldFwiOjAsXCJyZWNvcmRzUGVyUGFnZVwiOjl9fX0ifQ==
  recorded_at: Fri, 14 May 2021 15:56:19 GMT
- request:
    method: get
    uri: https://standards.ieee.org/standard/1619-2007.html
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Fri, 14 May 2021 15:56:19 GMT
      Accept-Ranges:
      - bytes
      Cache-Control:
      - no-cache="set-cookie"
      Content-Type:
      - text/html;charset=utf-8
      Last-Modified:
      - Fri, 14 May 2021 15:56:20 GMT
      Vary:
      - Host,Accept-Encoding,User-Agent
      X-Content-Type-Options:
      - nosniff
      X-Dispatcher:
      - dispatcher1useast1
      X-Frame-Options:
      - SAMEORIGIN
      X-Vhost:
      - standards.ieee.org
      Content-Length:
      - '12119'
      Set-Cookie:
      - AWSELB=55B9EFD71A621664217649CC5C38F09A66B8CD41093F0BE677C154DE9C3A182DFDDF69EB7FFDA49E920AFE49EFC4DCFD91A39FD99AA4B1E09EC960E71995097EB293C2DDCA;PATH=/;MAX-AGE=900;
        Secure
      - AWSELBCORS=55B9EFD71A621664217649CC5C38F09A66B8CD41093F0BE677C154DE9C3A182DFDDF69EB7FFDA49E920AFE49EFC4DCFD91A39FD99AA4B1E09EC960E71995097EB293C2DDCA;PATH=/;MAX-AGE=900;SECURE;SAMESITE=None
      - TS01247332=01c1c020dd2cc5452a6090f9368926dba40fc422e49cdb6cfe0cafa2d332839d51dbc142625897532886355c0dd2e497e9a6de7ce9;
        Path=/
      Connection:
      - close
      Content-Security-Policy:
      - frame-ancestors http://*.ieee.org https://*.ieee.org
      Strict-Transport-Security:
      - max-age=16070400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 14 May 2021 15:56:20 GMT
recorded_with: VCR 6.0.0
